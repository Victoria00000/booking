{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\"; // custom hook to fetch data from an API //\n\nexport const useFetch = url => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n\n      try {\n        const response = await axios.get(url);\n        setData(response.data);\n      } catch (error) {\n        setError(error);\n      }\n\n      setLoading(false);\n    };\n\n    fetchData();\n  }, [url]); // reFetch function to fetch data again after an error //\n\n  const reFetch = async () => {\n    setLoading(true);\n\n    try {\n      const response = await axios.get(url);\n      setData(response.data);\n    } catch (error) {\n      setError(error);\n    }\n\n    setLoading(false);\n  };\n\n  return {\n    loading,\n    error,\n    data,\n    reFetch\n  };\n};\n\n_s(useFetch, \"qLsnVFpzhKJO4hCauTvetfhf1g0=\");","map":{"version":3,"sources":["/home/vicky/Documentos/booking/client/src/customHooks/useFetch.js"],"names":["useEffect","useState","axios","useFetch","url","loading","setLoading","error","setError","data","setData","fetchData","response","get","reFetch"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AAC/B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,SAAS,GAAG,YAAY;AAC5BL,MAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,UAAI;AACF,cAAMM,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAUT,GAAV,CAAvB;AACAM,QAAAA,OAAO,CAACE,QAAQ,CAACH,IAAV,CAAP;AACD,OAHD,CAGE,OAAOF,KAAP,EAAc;AACdC,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;;AAEDD,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAXD;;AAaAK,IAAAA,SAAS;AACV,GAfQ,EAeN,CAACP,GAAD,CAfM,CAAT,CAL+B,CAsB/B;;AACA,QAAMU,OAAO,GAAG,YAAY;AAC1BR,IAAAA,UAAU,CAAC,IAAD,CAAV;;AAEA,QAAI;AACF,YAAMM,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAUT,GAAV,CAAvB;AACAM,MAAAA,OAAO,CAACE,QAAQ,CAACH,IAAV,CAAP;AACD,KAHD,CAGE,OAAOF,KAAP,EAAc;AACdC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;;AAEDD,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAXD;;AAYA,SAAO;AAAED,IAAAA,OAAF;AAAWE,IAAAA,KAAX;AAAkBE,IAAAA,IAAlB;AAAwBK,IAAAA;AAAxB,GAAP;AACD,CApCM;;GAAMX,Q","sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\n// custom hook to fetch data from an API //\nexport const useFetch = (url) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n\n      try {\n        const response = await axios.get(url);\n        setData(response.data);\n      } catch (error) {\n        setError(error);\n      }\n\n      setLoading(false);\n    };\n\n    fetchData();\n  }, [url]);\n\n  // reFetch function to fetch data again after an error //\n  const reFetch = async () => {\n    setLoading(true);\n\n    try {\n      const response = await axios.get(url);\n      setData(response.data);\n    } catch (error) {\n      setError(error);\n    }\n\n    setLoading(false);\n  };\n  return { loading, error, data, reFetch };\n};\n"]},"metadata":{},"sourceType":"module"}